import { IconID } from '../common.types'
import { IKVSProperty } from './kvs-property'

/**
 * Объект с данными изображения
 *
 * Изображения используются у слоев, полигонов, точек, пользователей и т.д.
 */
export interface IImageObject {
  /**
   * Контекст изображения
   *
   * Контекст - логическая связка типа объектов с группой изображений. Кроме того в контекст можно установить ограничния на размер и тип изображений
   */
  context_name: string

  /**
   * Набор подрезок изображения
   */
  crops: unknown[]

  /**
   * Расширение изображения
   */
  extension: string

  /**
   * Хеш изображения для кеширования изображения.
   *
   * Используется при получении изображения.
   */
  hash: string

  /**
   * ID изображения
   */
  image_id: IconID

  /**
   * MIME-тип
   */
  mime: string

  /**
   * Безопасный MIME-тип
   *
   * Тоже самое что и `mime`, но вместо слэша - нижнее подчеркивание
   */
  mime_safe: string

  /**
   * ID родительского метаблока
   *
   * Свойство возвращается с типом string. Для дальнейшей работы его нужно конвертировать
   * в number, т.к. значение всегда является числом. Ошибка на стороне бэка.
   */
  owner_id: string

  /**
   * KVS хранилище объекта
   */
  properties: IKVSProperty[]

  /**
   * Порядок сортировки, если объект имеет несколько изображений
   */
  sort: number

  /**
   * Изображение корректное.
   *
   * В большинстве случаев, когда нет изображения - вся эта структура просто будет null, но иногда структура может существовать и при отсутствующем изображении. В этом случае тут будет false
   */
  valid: boolean | null
}
